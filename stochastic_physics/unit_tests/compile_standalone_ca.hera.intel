#!/bin/sh
compile_all=1
#DEBUG=YES
DEBUG=NO
source ./module-setup.sh
module purge
module use $( pwd -P )
module load modules.hera.intel
rm standalone_ca.x
FC=mpif90
FMS_INC=${FMS_ROOT}/include_r8
FMS_LIB=${FMS_ROOT}/lib
INCS="-I. -I${FMS_INC} -I${NETCDF}/include"
if [ $DEBUG == 'YES' ]; then
   #FLAGS=" -g -C -traceback -real-size 64 -qopenmp -c "$INCS
   FLAGS=" -O0 -g -check all -link_mpi=dbg_mt -traceback -real-size 64 -qopenmp -c "$INCS
else
   FLAGS=" -traceback -real-size 64 -qopenmp -c "$INCS
fi
#FLAGS2=" -O0 -g -check all -link_mpi=dbg_mt -traceback -real-size 64 -qopenmp -c "$INCS
FLAGS2=" -traceback -real-size 64 -qopenmp -c "$INCS
cd ..
if [ $compile_all -eq 1 ];then
   rm -f *.i90 *.i *.o *.mod lib*a
   $FC ${FLAGS} kinddef.F90
   $FC ${FLAGS} mpi_wrapper.F90
   $FC ${FLAGS2} unit_tests/fv_arrays_stub.F90
   $FC ${FLAGS2} unit_tests/fv_mp_stub_mod.F90
   $FC ${FLAGS2} unit_tests/fv_control_stub.F90
   $FC ${FLAGS2} unit_tests/atmosphere_stub.F90
   $FC ${FLAGS2} random_numbers.F90
   $FC ${FLAGS} halo_exchange.fv3.F90
   $FC ${FLAGS} plumes.F90 
   $FC ${FLAGS} update_ca.F90
   $FC ${FLAGS} cellular_automata_sgs.F90
   $FC ${FLAGS} cellular_automata_global.F90
   ar rv libcellular_automata.a *.o
fi
if [ $DEBUG == 'YES' ]; then
   $FC -traceback -g -C -real-size 64 -qopenmp -o unit_tests/standalone_ca.x unit_tests/standalone_ca.F90 ${INCS} -I${NETCDF}/include -L. -lcellular_automata -L${FMS_LIB} -lfms_r8 -L${ESMF_LIB} -Wl,-rpath,${ESMF_LIB} -lesmf -L${NETCDF}/lib -lnetcdff -lnetcdf -L${HDF5_LIBRARIES} -lhdf5_hl -lhdf5 \
-L${ZLIB_LIBRARIES} -lz
else
   $FC -traceback -real-size 64 -qopenmp -o unit_tests/standalone_ca.x unit_tests/standalone_ca.F90 ${INCS} -I${NETCDF}/include -L. -lcellular_automata -L${FMS_LIB} -lfms_r8 -L${ESMF_LIB} -Wl,-rpath,${ESMF_LIB} -lesmf -L${NETCDF}/lib -lnetcdff -lnetcdf -L${HDF5_LIBRARIES} -lhdf5_hl -lhdf5 \
-L${ZLIB_LIBRARIES} -lz
fi
