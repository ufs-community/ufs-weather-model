# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

env:
  app: Accept:application/vnd.github.v3+json
  base_url: $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/actions/runs
  AUTH: ${{ secrets.GITHUB_TOKEN }}

jobs:
  pre:
    name: Preprocess
    runs-on: ubuntu-20.04

    steps:
    - name: Share helper id
      run: echo -n ${{ github.run_id }} >~/id_file

    - uses: actions/cache@v2
      with:
        path: ~/id_file
        key: helperid-${{ github.event.workflow_run.id }}

  repocheck:
    name: Repo check
    runs-on: ubuntu-20.04

    steps:
    - name: Check up-to-dateness and post comment
      run: |
        head_sha=${{ github.event.workflow_run.head_sha }}
        git clone -q ${{ github.event.workflow_run.head_repository.html_url }} .
        git checkout -q $head_sha
        git submodule -q update --init --recursive
        cd ${{ github.workspace }}/tests/ci
        url=$GITHUB_API_URL/repos/$GITHUB_REPOSITORY
        pr_number=$(curl -sS -H $app $url/pulls \
          | jq -r '.[] | select(.head.sha == "'"$head_sha"'") | .number')
        echo "pr_number is $pr_number"
        pr_uid=${{ github.event.workflow_run.head_repository.owner.login }}
        echo "pr_uid is $pr_uid"
        comment="$(./repo_check.sh $pr_uid 2>/dev/null)"
        echo "comment is $comment"
        if [[ -n $comment ]]; then
          curl -sS -X POST -H $app -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            $url/issues/$pr_number/comments -d '{"body": "'"${comment}"'"}'
          echo -n "failure" >~/repocheck_file
        else
          echo -n "success" >~/repocheck_file
        fi
