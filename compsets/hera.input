
########################################################################

# HERA SUPPORT

platform hera.intel {
    use platform.defaults
    MACHINE_ID='hera.intel' # Name of this platform.
    PARTITION='hera'
    MPI='srun_shell'

    CPU_ACCOUNT='nems'
    BUILD_QUEUE='&BUILDQ;' # Queue to use for compilation jobs
    SHORT_TEST_QUEUE='&SHORTQ;' # Queue to use for short test jobs
    LONG_TEST_QUEUE='&LONGQ;' # Queue to use for long test jobs

    cores_per_node=40 # Number of cores per node on compute nodes
    cpus_per_core=2
    C768_PPN=10
    C768_THRD=4

 # hera testing: using longer run time
    DEFAULT_TEST_WALLTIME=3000

 #  The *nems locations are in NEMS checkout areas.
    HOMEnems=PWD_UP5

    # The *rt locations are auto-generated areas.
    HOMErt=OUTPUT_PATH

    # INPUTS is the input directory, which should contain fix and parm
    # files, plus any restarts or other inputs.

    BASELINE="/scratch1/NCEPDEV/nems/emc.nemspara/RT/NEMSfv3gfs/develop-20200210"
    BASELINE_TEMPLATE="/scratch1/NCEPDEV/nems/emc.nemspara/RT/NEMSfv3gfs/develop-20200210"
    INPUTS="@[BASELINE]"

    default_resources={
        TASKS=150
        TPN=40
        INPES=3
        JNPES=8
        THRD=1
        WRTTASK_PER_GROUP=6
        atm_petlist_bounds="0 149"
        wav_petlist_bounds="150 191"
        CPLTASKS=192
    }
    default_stretched_resources={
        TASKS=48
        TPN=12
        INPES=2
        JNPES=4
        THRD=1
    }
    default_nested_resources={
	use default_stretched_resources
        TASKS=96
    }
    default_threaded_resources={
        TASKS=84
        TPN=20
        INPES=3
        JNPES=4
        THRD=2
        WRTTASK_PER_GROUP=12
    }

    # PLATFORM DETECTION -----------------------------------------------
    embed bash detect [[[
        # This function is used at PARSE TIME to detect whether we are
        # on NOAA Hera.  It must be very fast and low resource usage
        # since the parser runs it.
        if [[ -d /scratch1 && -d /scratch2 ]] ; then
            exit 0
        fi
        exit 1
    ]]]

    # ROCOTO SUPPORT ---------------------------------------------------
    rocoto={
        install_dir="@[HOMErt]"
        log_dir="@[TMPrt]/log"
        scheduler="slurm"
        entities=[[[
  <!ENTITY SHORTQ "batch">
  <!ENTITY LONGQ "batch">
  <!ENTITY BUILDQ "batch"> <!-- NOTE: If you change this, you must change the partition too -->
]]]
        build_resources=[[[
      <!-- Build job resources minus wallclock -->
      <queue>@[BUILD_QUEUE]</queue>
      <partition>@[PARTITION]</partition>
      <cores>12</cores> <!-- 2 cores ensures exclusive access on Hera -->
      <envar><name>PRODUTIL_RUN_NODESIZE</name><value>@[cores_per_node]</value></envar>
]]]
        short_test_resources=[[[
      <!-- Short test job -->
      <queue>@[SHORT_TEST_QUEUE]</queue>
      <partition>@[PARTITION]</partition>
      <envar><name>PRODUTIL_RUN_NODESIZE</name><value>@[cores_per_node]</value></envar>
]]]
        long_test_resources=[[[
      <!-- Long test job -->
      <queue>@[LONG_TEST_QUEUE]</queue>
      <partition>@[PARTITION]</partition>
      <envar><name>PRODUTIL_RUN_NODESIZE</name><value>@[cores_per_node]</value></envar>
]]]
    }
}
